import se.lth.cs.pt.window.SimpleWindow;

public class Turtle {

	private int xkoord; /// instance variables
	private int ykoord;
	private SimpleWindow w;

	/**
	 * Skapar en sköldpadda som ritar i ritfönstret w. Från början befinner sig
	 * sköldpaddan i punkten x, y med pennan lyft och huvudet pekande rakt uppåt i
	 * fönstret (i negativ y-riktning).
	 */

	// the Turtle constructor
	public Turtle(SimpleWindow w, int x, int y) {
		this.xkoord = x;
		this.ykoord = y;
		this.w = w;

	}

	/** Sänker pennan. */
	public void penDown() {
		int newx =w.getX();                // the turtle's new location
		int newy = w.getY();
		w.lineTo(newx, newy);
	}

	/** Lyfter pennan. */
	public void penUp() {
		int newx =w.getX();
		int newy = w.getY();
		w.moveTo(newx, newy);
	}

	/** Går rakt framåt n pixlar i den riktning huvudet pekar. */
	public void forward(int n) {

	}

	/** Vrider beta grader åt vänster runt pennan. */
	public void left(int beta) {

	}

	/**
	 * Går till punkten newX, newY utan att rita. Pennans läge (sänkt eller lyft)
	 * och huvudets riktning påverkas inte.
	 */
	public void jumpTo(int newX, int newY) {

	}

	/** Återställer huvudriktningen till den ursprungliga. */
	public void turnNorth() {

	}

	/** Tar reda på x-koordinaten för sköldpaddans aktuella position. */
	public int getX() {
		return 0;
	}

	/** Tar reda på y-koordinaten för sköldpaddans aktuella position. */
	public int getY() {
		return 0;
	}

	/** Tar reda på sköldpaddans riktning, i grader från den positiva X-axeln. */
	public int getDirection() {
		return 0;
	}
}
